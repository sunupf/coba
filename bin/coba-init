#!/usr/bin/env node

(function(){
  var program = require('commander');
  var fs = require('fs-extra');
  var path = require('path');
  var testSuite =false;
  try{
    testSuite = fs.readJsonSync(path.resolve(__dirname,"../testSuite.json"));
  }catch(e){
  }
  var errors = require('../lib/errors');
  var validate = require('../lib/validation');


  program
    .version('0.0.1')
    .usage('<name>')
    .on('--help', function() {
      require('../help/init')
    });

  program.parse(process.argv);

  if(program.args.length < 1){
    console.log('You need to specify specification name')
  }else if(program.args.length === 1 && program.args[0] === 'help'){
    console.log('  Help : coba init -h')
    console.log();
    require('../help/init')
  }else{
    var args = program.args;
    for(i=0;i<args.length;i++){
      if(validate.isAlphaNumericUnderscore(args[i])){
        fs.mkdirs(args[i],false, function (err,suit) {
          if (err) return console.error(err)
          fs.copySync(path.resolve(__dirname,"../template/"),'./'+suit+'/');
          if(testSuite != false){
            testSuite.push(suit);
          }else{
            var files = fs.readdirSync("./");
            var directories = files.filter(function(file){
              return !fs.statSync(file).isFile() && file[0] != "." && file != "node_modules";
            })
            testSuite = directories
          }
          fs.writeJsonSync("./testSuite.json",testSuite);
          console.log(suit+" test suit has been created!");
        },args[i])
      }else{
        errors.isAlphaNumericUnderscore(args[i])
      }
    }
  }
}).call(this)
